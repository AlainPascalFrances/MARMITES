from numpy import atleast_2d
from mbase import package

class mfghb(package):
    '''General head boundary package class
    layer_row_column_head_cond is a list of 2D arrays. Each array has 5 columns containing
    the layer #, row #, column #, head value, and conductance value of a ghb cell.
    Enter a separate array for each stress period. When fewer arrays are supplied than stress periods,
    the ghb cells of the last array are repeated.
    No parameters implemented'''
    def __init__(self, model, ighbcb=50, layer_row_column_head_cond=None, extension='ghb', unitnumber=23):
        package.__init__(self, model, extension, 'GHB', unitnumber) # Call ancestor's init to set self.parent, extension, name and unit number
        self.heading = '# GHB for MODFLOW, generated by Flopy.'
        self.url = 'ghb.htm'
        self.ighbcb = ighbcb # no cell by cell terms are written
        self.mxactb, self.layer_row_column_head_cond = self.assign_layer_row_column_data(layer_row_column_head_cond, 5)
        self.np = 0
        self.parent.add_package(self)
    def __repr__( self ):
        return 'GHB package class'
    def ncells( self):
        # Returns the  maximum number of cells that have a ghb (developped for MT3DMS SSM package)
        print 'Function must be implemented properly for ghb package'
        return 0
    def write_file(self):
        f_ghb = open(self.fn_path, 'w')
        f_ghb.write('%s\n' % self.heading)
        f_ghb.write('%10i%10i\n' % (self.mxactb, self.ighbcb))
        self.write_layer_row_column_data(f_ghb, self.layer_row_column_head_cond)
        f_ghb.close()
