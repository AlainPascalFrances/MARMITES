# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Tue May 08 00:19:51 2007 from C:\_alf\MOD9_GEOPROC\ReSo\GUI\ReSo_dialogv1.wxg

import wx

# begin wxGlade: dependencies
# end wxGlade

class cls_CalibGraph(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: cls_CalibGraph.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.pn_CalibGraph = wx.Panel(self, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        wxFrame.__init__(self, None, -1, "Test ReSo - Calibration graphs")

        self.fig = Figure((9,8), 75)
        self.canvas = FigureCanvasWx(self, -1, self.fig)
        self.toolbar = Toolbar(self.canvas)
        self.toolbar.Realize()

        # On Windows, default frame size behaviour is incorrect
        # you don't need this under Linux
        tw, th = self.toolbar.GetSizeTuple()
        fw, fh = self.canvas.GetSizeTuple()
        self.toolbar.SetSize(wxSize(fw, th))

        # Create a figure manager to manage things
        self.figmgr = FigureManager(self.canvas, 1, self)
        # Now put all into a sizer
        sizer = wxBoxSizer(wxVERTICAL)
        # This way of adding to sizer allows resizing
        sizer.Add(self.canvas, 1, wxLEFT|wxTOP|wxGROW)
        # Best to allow the toolbar to resize!
        sizer.Add(self.toolbar, 0, wxGROW)
        self.SetSizer(sizer)
        self.Fit()

    def __set_properties(self):
        # begin wxGlade: cls_CalibGraph.__set_properties
        self.SetTitle("ReSo - Calibration graphs")
        self.SetSize((600, 400))
        self.pn_CalibGraph.SetMinSize((600,400))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: cls_CalibGraph.__do_layout
        sz_CalibGraph = wx.BoxSizer(wx.VERTICAL)
        sz_CalibGraph.Add(self.pn_CalibGraph, 1, wx.EXPAND, 0)
        self.SetSizer(sz_CalibGraph)
        self.Layout()
        # end wxGlade

    def plot_data(self):
        # Use ths line if using a toolbar
        a = self.fig.add_subplot(111)
        
        # Or this one if there is no toolbar
        #a = Subplot(self.fig, 111)
        
        t = numpy.arange(0.0,3.0,0.01)
        s = numpy.sin(2*numpy.pi*t)
        c = numpy.cos(2*numpy.pi*t)
        a.plot(t,s)
        a.plot(t,c)
        self.toolbar.update()

    def GetToolBar(self):
        # You will need to override GetToolBar if you are using an 
        # unmanaged toolbar in your frame
        return self.toolbar

# end of class cls_CalibGraph

if __name__ == '__main__':
    app = wxPySimpleApp(0)
    frame = PlotFigure()
    frame.plot_data()
    frame.Show()
    app.MainLoop()
